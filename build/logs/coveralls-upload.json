{"repo_token":"ZM9n2HizdOwUNXmf9UXBzEAYSTW1uqGRY","git":{"branch":"travis","head":{"id":"a1288fd05b3cf6488dcc51a38771cd01b4db2467","author_name":"Kevin Friedman","author_email":"kevinfriedman@nypl.org","committer_name":"Kevin Friedman","committer_email":"kevinfriedman@nypl.org","message":"Updating Travis integration"},"remotes":[{"name":"origin","url":"git@github.com:NYPL-discovery\/bibservice.git"}]},"run_at":"2017-06-09 15:05:19 +0000","source_files":[{"name":"src\/Controller\/BibController.php","source":"<?php\nnamespace NYPL\\Services\\Controller;\n\nuse NYPL\\Services\\Model\\Response\\BulkResponse\\BulkBibsResponse;\nuse NYPL\\Starter\\BulkModels;\nuse NYPL\\Starter\\Controller;\nuse NYPL\\Starter\\Filter;\nuse NYPL\\Services\\Model\\DataModel\\BaseBib\\Bib;\nuse NYPL\\Services\\Model\\Response\\SuccessResponse\\BibsResponse;\nuse NYPL\\Services\\Model\\Response\\SuccessResponse\\BibResponse;\nuse NYPL\\Starter\\ModelSet;\n\nfinal class BibController extends Controller\n{\n    \/**\n     * @SWG\\Post(\n     *     path=\"\/v0.1\/bibs\",\n     *     summary=\"Create new Bibs\",\n     *     tags={\"bibs\"},\n     *     operationId=\"createBib\",\n     *     consumes={\"application\/json\"},\n     *     produces={\"application\/json\"},\n     *     @SWG\\Parameter(\n     *         name=\"NewBib\",\n     *         in=\"body\",\n     *         description=\"\",\n     *         required=true,\n     *         @SWG\\Schema(\n     *             type=\"array\",\n     *             @SWG\\Items(ref=\"#\/definitions\/NewBib\")\n     *         )\n     *     ),\n     *     @SWG\\Response(\n     *         response=200,\n     *         description=\"Successful operation\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/BulkBibsResponse\")\n     *     ),\n     *     @SWG\\Response(\n     *         response=\"401\",\n     *         description=\"Unauthorized\"\n     *     ),\n     *     @SWG\\Response(\n     *         response=\"404\",\n     *         description=\"Not found\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/ErrorResponse\")\n     *     ),\n     *     @SWG\\Response(\n     *         response=\"500\",\n     *         description=\"Generic server error\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/ErrorResponse\")\n     *     ),\n     *     security={\n     *         {\n     *             \"api_auth\": {\"openid offline_access api\"}\n     *         }\n     *     }\n     * )\n     *\/\n    public function createBib()\n    {\n        $bulkModels = new BulkModels();\n\n        foreach ($this->getRequest()->getParsedBody() as $bibData) {\n            if (!isset($bibData['nyplSource'])) {\n                $bibData['nyplSource'] = 'sierra-nypl';\n            }\n\n            if (!isset($bibData['nyplType'])) {\n                $bibData['nyplType'] = 'bib';\n            }\n\n            $bulkModels->addModel(new Bib($bibData));\n        }\n\n        $bulkModels->create(true);\n\n        return $this->getResponse()->withJson(\n            new BulkBibsResponse(\n                $bulkModels->getModels(),\n                $bulkModels->getBulkErrors()\n            )\n        );\n    }\n\n    \/**\n     * @SWG\\Get(\n     *     path=\"\/v0.1\/bibs\",\n     *     summary=\"Get a list of Bibs\",\n     *     tags={\"bibs\"},\n     *     operationId=\"getBibs\",\n     *     consumes={\"application\/json\"},\n     *     produces={\"application\/json\"},\n     *     @SWG\\Parameter(\n     *         name=\"id\",\n     *         in=\"query\",\n     *         required=false,\n     *         type=\"string\",\n     *         description=\"Separate multiple IDs with a comma\"\n     *     ),\n     *     @SWG\\Parameter(\n     *         name=\"offset\",\n     *         in=\"query\",\n     *         required=false,\n     *         type=\"integer\"\n     *     ),\n     *     @SWG\\Parameter(\n     *         name=\"limit\",\n     *         in=\"query\",\n     *         required=false,\n     *         type=\"integer\"\n     *     ),\n     *     @SWG\\Parameter(\n     *         name=\"nyplSource\",\n     *         in=\"query\",\n     *         required=false,\n     *         type=\"string\"\n     *     ),\n     *     @SWG\\Response(\n     *         response=200,\n     *         description=\"Successful operation\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/BibsResponse\")\n     *     ),\n     *     @SWG\\Response(\n     *         response=\"404\",\n     *         description=\"Not found\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/ErrorResponse\")\n     *     ),\n     *     @SWG\\Response(\n     *         response=\"500\",\n     *         description=\"Generic server error\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/ErrorResponse\")\n     *     ),\n     *     security={\n     *         {\n     *             \"api_auth\": {\"openid offline_access api\"}\n     *         }\n     *     }\n     * )\n     *\/\n    public function getBibs()\n    {\n        return $this->getDefaultReadResponse(\n            new ModelSet(new Bib()),\n            new BibsResponse(),\n            null,\n            ['barcode', 'nyplSource', 'id']\n        );\n    }\n\n    \/**\n     * @SWG\\Get(\n     *     path=\"\/v0.1\/bibs\/{nyplSource}\/{id}\",\n     *     summary=\"Get a Bib\",\n     *     tags={\"bibs\"},\n     *     operationId=\"getBib\",\n     *     consumes={\"application\/json\"},\n     *     produces={\"application\/json\"},\n     *     @SWG\\Parameter(\n     *         in=\"path\",\n     *         name=\"nyplSource\",\n     *         required=true,\n     *         type=\"string\",\n     *         format=\"string\"\n     *     ),\n     *     @SWG\\Parameter(\n     *         in=\"path\",\n     *         name=\"id\",\n     *         required=true,\n     *         type=\"string\",\n     *         format=\"string\"\n     *     ),\n     *     @SWG\\Response(\n     *         response=200,\n     *         description=\"Successful operation\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/BibResponse\")\n     *     ),\n     *     @SWG\\Response(\n     *         response=\"404\",\n     *         description=\"Not found\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/ErrorResponse\")\n     *     ),\n     *     @SWG\\Response(\n     *         response=\"500\",\n     *         description=\"Generic server error\",\n     *         @SWG\\Schema(ref=\"#\/definitions\/ErrorResponse\")\n     *     ),\n     *     security={\n     *         {\n     *             \"api_auth\": {\"openid api\"}\n     *         }\n     *     }\n     * )\n     *\/\n    public function getBib($nyplSource = '', $id = '')\n    {\n        $bib = new Bib();\n\n        $bib->addFilter(new Filter('id', $id));\n        $bib->addFilter(new Filter('nyplSource', $nyplSource));\n\n        return $this->getDefaultReadResponse(\n            $bib,\n            new BibResponse()\n        );\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,0,0,0,null,null,0,0,null,null,0,null,null,0,null,0,0,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,0,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,0,0,null,0,null,0,null,null,null]},{"name":"src\/Model\/DataModel.php","source":"<?php\nnamespace NYPL\\Services\\Model;\n\nuse NYPL\\Starter\\Model;\nuse NYPL\\Starter\\Model\\ModelTrait\\DBReadTrait;\nuse NYPL\\Starter\\Model\\ModelTrait\\DBTrait;\n\nabstract class DataModel extends Model\n{\n    use DBReadTrait, DBTrait;\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null]},{"name":"src\/Model\/DataModel\/BaseBib.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Services\\Model\\DataModel;\nuse NYPL\\Starter\\Model\\LocalDateTime;\nuse NYPL\\Starter\\Model\\ModelTrait\\TranslateTrait;\n\nabstract class BaseBib extends DataModel\n{\n    use TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"17746307\")\n     * @var string\n     *\/\n    public $id;\n\n    \/**\n     * @SWG\\Property(example=\"sierra-nypl\")\n     * @var string\n     *\/\n    public $nyplSource;\n\n    \/**\n     * @SWG\\Property(example=\"bib\")\n     * @var string\n     *\/\n    public $nyplType;\n\n    \/**\n     * @SWG\\Property(example=\"2016-01-07T02:32:51Z\", type=\"string\")\n     * @var LocalDateTime\n     *\/\n    public $updatedDate;\n\n    \/**\n     * @SWG\\Property(example=\"2008-12-24T03:16:00Z\", type=\"string\")\n     * @var LocalDateTime\n     *\/\n    public $createdDate;\n\n    \/**\n     * @SWG\\Property(example=\"2008-12-24\", type=\"string\")\n     * @var LocalDateTime\n     *\/\n    public $deletedDate;\n\n    \/**\n     * @SWG\\Property(example=false)\n     * @var bool\n     *\/\n    public $deleted;\n\n    \/**\n     * @SWG\\Property()\n     * @var Location[]\n     *\/\n    public $locations;\n\n    \/**\n     * @SWG\\Property(example=false)\n     * @var bool\n     *\/\n    public $suppressed;\n\n    \/**\n     * @SWG\\Property\n     * @var Language\n     *\/\n    public $lang;\n\n    \/**\n     * @SWG\\Property(example=\"Harry Potter and the Chamber of Secrets\")\n     * @var string\n     *\/\n    public $title;\n\n    \/**\n     * @SWG\\Property(example=\"Rowling, J. K.\")\n     * @var string\n     *\/\n    public $author;\n\n    \/**\n     * @SWG\\Property()\n     * @var MaterialType\n     *\/\n    public $materialType;\n\n    \/**\n     * @SWG\\Property()\n     * @var BibLevel\n     *\/\n    public $bibLevel;\n\n    \/**\n     * @SWG\\Property(example=1999)\n     * @var int\n     *\/\n    public $publishYear;\n\n    \/**\n     * @SWG\\Property(example=\"2008-12-24\", type=\"string\")\n     * @var LocalDateTime\n     *\/\n    public $catalogDate;\n\n    \/**\n     * @SWG\\Property\n     * @var Country\n     *\/\n    public $country;\n\n    \/**\n     * @SWG\\Property()\n     * @var string\n     *\/\n    public $normTitle;\n\n    \/**\n     * @SWG\\Property()\n     * @var string\n     *\/\n    public $normAuthor;\n\n\n    \/**\n     * @SWG\\Property()\n     * @var FixedField[]\n     *\/\n    public $fixedFields;\n\n    \/**\n     * @SWG\\Property()\n     * @var VarField[]\n     *\/\n    public $varFields;\n\n    \/**\n     * @return string\n     *\/\n    public function getId()\n    {\n        return $this->id;\n    }\n\n    \/**\n     * @param string $id\n     *\/\n    public function setId($id)\n    {\n        $this->id = $id;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getNyplSource()\n    {\n        return $this->nyplSource;\n    }\n\n    \/**\n     * @param string $nyplSource\n     *\/\n    public function setNyplSource($nyplSource)\n    {\n        $this->nyplSource = $nyplSource;\n    }\n\n    \/**\n     * @return LocalDateTime\n     *\/\n    public function getUpdatedDate()\n    {\n        return $this->updatedDate;\n    }\n\n    \/**\n     * @param LocalDateTime $updatedDate\n     *\/\n    public function setUpdatedDate(LocalDateTime $updatedDate)\n    {\n        $this->updatedDate = $updatedDate;\n    }\n\n    \/**\n     * @param string $updatedDate\n     *\n     * @return LocalDateTime\n     *\/\n    public function translateUpdatedDate($updatedDate = '')\n    {\n        return new LocalDateTime(LocalDateTime::FORMAT_DATE_TIME_RFC, $updatedDate);\n    }\n\n    \/**\n     * @return LocalDateTime\n     *\/\n    public function getCreatedDate()\n    {\n        return $this->createdDate;\n    }\n\n    \/**\n     * @param LocalDateTime $createdDate\n     *\/\n    public function setCreatedDate(LocalDateTime $createdDate)\n    {\n        $this->createdDate = $createdDate;\n    }\n\n    \/**\n     * @param string $createdDate\n     *\n     * @return LocalDateTime\n     *\/\n    public function translateCreatedDate($createdDate = '')\n    {\n        return new LocalDateTime(LocalDateTime::FORMAT_DATE_TIME_RFC, $createdDate);\n    }\n\n    \/**\n     * @return boolean\n     *\/\n    public function isDeleted()\n    {\n        return $this->deleted;\n    }\n\n    \/**\n     * @param boolean $deleted\n     *\/\n    public function setDeleted($deleted)\n    {\n        $this->deleted = boolval($deleted);\n    }\n\n    \/**\n     * @return boolean\n     *\/\n    public function isSuppressed()\n    {\n        return $this->suppressed;\n    }\n\n    \/**\n     * @param boolean $suppressed\n     *\/\n    public function setSuppressed($suppressed)\n    {\n        $this->suppressed = boolval($suppressed);\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getTitle()\n    {\n        return $this->title;\n    }\n\n    \/**\n     * @param string $title\n     *\/\n    public function setTitle($title)\n    {\n        $this->title = $title;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getAuthor()\n    {\n        return $this->author;\n    }\n\n    \/**\n     * @param string $author\n     *\/\n    public function setAuthor($author)\n    {\n        $this->author = $author;\n    }\n\n    \/**\n     * @return MaterialType\n     *\/\n    public function getMaterialType()\n    {\n        return $this->materialType;\n    }\n\n    \/**\n     * @param MaterialType $materialType\n     *\/\n    public function setMaterialType(MaterialType $materialType)\n    {\n        $this->materialType = $materialType;\n    }\n\n    \/**\n     * @param array|string $data\n     *\n     * @return MaterialType\n     *\/\n    public function translateMaterialType($data)\n    {\n        return new MaterialType($data, true);\n    }\n\n    \/**\n     * @return BibLevel\n     *\/\n    public function getBibLevel()\n    {\n        return $this->bibLevel;\n    }\n\n    \/**\n     * @param BibLevel $bibLevel\n     *\/\n    public function setBibLevel(BibLevel $bibLevel)\n    {\n        $this->bibLevel = $bibLevel;\n    }\n\n    \/**\n     * @param array|string $data\n     *\n     * @return BibLevel\n     *\/\n    public function translateBibLevel($data)\n    {\n        return new BibLevel($data, true);\n    }\n\n    \/**\n     * @return int\n     *\/\n    public function getPublishYear()\n    {\n        return $this->publishYear;\n    }\n\n    \/**\n     * @param int $publishYear\n     *\/\n    public function setPublishYear($publishYear)\n    {\n        $this->publishYear = (int) $publishYear;\n    }\n\n    \/**\n     * @return LocalDateTime\n     *\/\n    public function getCatalogDate()\n    {\n        return $this->catalogDate;\n    }\n\n    \/**\n     * @param LocalDateTime $catalogDate\n     *\/\n    public function setCatalogDate($catalogDate)\n    {\n        $this->catalogDate = $catalogDate;\n    }\n\n    \/**\n     * @param string $catalogDate\n     *\n     * @return LocalDateTime\n     *\/\n    public function translateCatalogDate($catalogDate = '')\n    {\n        return new LocalDateTime(LocalDateTime::FORMAT_DATE, $catalogDate);\n    }\n\n    \/**\n     * @return FixedField[]\n     *\/\n    public function getFixedFields()\n    {\n        return $this->fixedFields;\n    }\n\n    \/**\n     * @param FixedField[] $fixedFields\n     *\/\n    public function setFixedFields($fixedFields)\n    {\n        $this->fixedFields = $fixedFields;\n    }\n\n    \/**\n     * @param array|string $data\n     *\n     * @return FixedField[]\n     *\/\n    public function translateFixedFields($data)\n    {\n        return $this->translateArray($data, new FixedField(), true);\n    }\n\n    \/**\n     * @return VarField[]\n     *\/\n    public function getVarFields()\n    {\n        return $this->varFields;\n    }\n\n    \/**\n     * @param VarField[] $varFields\n     *\/\n    public function setVarFields($varFields)\n    {\n        $this->varFields = $varFields;\n    }\n\n    \/**\n     * @param array|string $data\n     *\n     * @return VarField[]\n     *\/\n    public function translateVarFields($data)\n    {\n        return $this->translateArray($data, new VarField(), true);\n    }\n\n    \/**\n     * @return LocalDateTime\n     *\/\n    public function getDeletedDate()\n    {\n        return $this->deletedDate;\n    }\n\n    \/**\n     * @param LocalDateTime $deletedDate\n     *\/\n    public function setDeletedDate($deletedDate)\n    {\n        $this->deletedDate = $deletedDate;\n    }\n\n    \/**\n     * @param string $deletedDate\n     *\n     * @return LocalDateTime\n     *\/\n    public function translateDeletedDate($deletedDate = '')\n    {\n        return new LocalDateTime(LocalDateTime::FORMAT_DATE, $deletedDate);\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getNormTitle()\n    {\n        return $this->normTitle;\n    }\n\n    \/**\n     * @param string $normTitle\n     *\/\n    public function setNormTitle($normTitle)\n    {\n        $this->normTitle = $normTitle;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getNormAuthor()\n    {\n        return $this->normAuthor;\n    }\n\n    \/**\n     * @param string $normAuthor\n     *\/\n    public function setNormAuthor($normAuthor)\n    {\n        $this->normAuthor = $normAuthor;\n    }\n\n    \/**\n     * @return Location[]\n     *\/\n    public function getLocations()\n    {\n        return $this->locations;\n    }\n\n    \/**\n     * @param Location[] $locations\n     *\/\n    public function setLocations($locations)\n    {\n        $this->locations = $locations;\n    }\n\n    \/**\n     * @param array|string $data\n     *\n     * @return Location[]\n     *\/\n    public function translateLocations($data)\n    {\n        return $this->translateArray($data, new Location(), true);\n    }\n\n    \/**\n     * @return Language\n     *\/\n    public function getLang()\n    {\n        return $this->lang;\n    }\n\n    \/**\n     * @param Language $lang\n     *\/\n    public function setLang($lang)\n    {\n        $this->lang = $lang;\n    }\n\n    \/**\n     * @param array|string $data\n     *\n     * @return Language\n     *\/\n    public function translateLang($data)\n    {\n        return new Language($data, true);\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getCountry()\n    {\n        return $this->country;\n    }\n\n    \/**\n     * @param string $country\n     *\/\n    public function setCountry($country)\n    {\n        $this->country = $country;\n    }\n\n    \/**\n     * @param array|string $data\n     *\n     * @return Country\n     *\/\n    public function translateCountry($data)\n    {\n        return new Country($data, true);\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getNyplType()\n    {\n        return $this->nyplType;\n    }\n\n    \/**\n     * @param string $nyplType\n     *\/\n    public function setNyplType($nyplType)\n    {\n        $this->nyplType = $nyplType;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/BaseBib\/Bib.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel\\BaseBib;\n\nuse NYPL\\Services\\Model\\DataModel\\BaseBib;\nuse NYPL\\Starter\\Model\\ModelInterface\\DeleteInterface;\nuse NYPL\\Starter\\Model\\ModelInterface\\MessageInterface;\nuse NYPL\\Starter\\Model\\ModelInterface\\ReadInterface;\nuse NYPL\\Starter\\Model\\ModelTrait\\DBCreateTrait;\nuse NYPL\\Starter\\Model\\ModelTrait\\DBDeleteTrait;\nuse NYPL\\Starter\\Model\\ModelTrait\\DBReadTrait;\nuse NYPL\\Starter\\Model\\ModelTrait\\DBUpdateTrait;\n\n\/**\n * @SWG\\Definition(title=\"Bib\", type=\"object\", required={\"id\"})\n *\/\nclass Bib extends BaseBib implements MessageInterface, ReadInterface, DeleteInterface\n{\n    use DBCreateTrait, DBReadTrait, DBDeleteTrait, DBUpdateTrait;\n\n    public function getSchema()\n    {\n        return\n            [\n                \"name\" => \"Bib\",\n                \"type\" => \"record\",\n                \"fields\" => [\n                    [\"name\" => \"id\", \"type\" => \"string\"],\n                    [\"name\" => \"nyplSource\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"nyplType\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"updatedDate\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"createdDate\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"deletedDate\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"deleted\", \"type\" => \"boolean\"],\n                    [\"name\" => \"locations\" , \"type\" => [\n                        \"null\",\n                        [\"type\" => \"array\", \"items\" => [\n                            [\"name\" => \"locations\", \"type\" => \"record\", \"fields\" => [\n                                [\"name\" => \"code\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"name\", \"type\" => [\"string\", \"null\"]],\n                            ]]\n                        ]],\n                    ]],\n                    [\"name\" => \"suppressed\", \"type\" => [\"boolean\", \"null\"]],\n                    [\"name\" => \"lang\" , \"type\" => [\n                        \"null\",\n                        [\"name\" => \"lang\", \"type\" => \"record\", \"fields\" => [\n                            [\"name\" => \"code\", \"type\" => \"string\"],\n                            [\"name\" => \"name\", \"type\" => [\"string\", \"null\"]],\n                        ]],\n                    ]],\n                    [\"name\" => \"title\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"author\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"materialType\" , \"type\" => [\n                        \"null\",\n                        [\"name\" => \"materialType\", \"type\" => \"record\", \"fields\" => [\n                            [\"name\" => \"code\", \"type\" => \"string\"],\n                            [\"name\" => \"value\", \"type\" => \"string\"],\n                        ]],\n                    ]],\n                    [\"name\" => \"bibLevel\" , \"type\" => [\n                        \"null\",\n                        [\"name\" => \"bibLevel\", \"type\" => \"record\", \"fields\" => [\n                            [\"name\" => \"code\", \"type\" => \"string\"],\n                            [\"name\" => \"value\", \"type\" => \"string\"],\n                        ]],\n                    ]],\n                    [\"name\" => \"publishYear\", \"type\" => [\"int\", \"null\"]],\n                    [\"name\" => \"catalogDate\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"country\" , \"type\" => [\n                        \"null\",\n                        [\"name\" => \"country\", \"type\" => \"record\", \"fields\" => [\n                            [\"name\" => \"code\", \"type\" => \"string\"],\n                            [\"name\" => \"name\", \"type\" => \"string\"],\n                        ]],\n                    ]],\n                    [\"name\" => \"normTitle\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"normAuthor\", \"type\" => [\"string\", \"null\"]],\n                    [\"name\" => \"fixedFields\" , \"type\" => [\n                        \"null\",\n                        [\"type\" => \"map\", \"values\" => [\n                            [\"name\" => \"fixedField\", \"type\" => \"record\", \"fields\" => [\n                                [\"name\" => \"label\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"value\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"display\", \"type\" => [\"string\", \"null\"]],\n                            ]]\n                        ]],\n                    ]],\n                    [\"name\" => \"varFields\" , \"type\" => [\n                        \"null\",\n                        [\"type\" => \"array\", \"items\" => [\n                            [\"name\" => \"varField\", \"type\" => \"record\", \"fields\" => [\n                                [\"name\" => \"fieldTag\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"marcTag\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"ind1\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"ind2\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"content\", \"type\" => [\"string\", \"null\"]],\n                                [\"name\" => \"subFields\" , \"type\" => [\n                                    \"null\",\n                                    [\"type\" => \"array\", \"items\" => [\n                                        [\"name\" => \"subField\", \"type\" => \"record\", \"fields\" => [\n                                            [\"name\" => \"tag\", \"type\" => [\"string\", \"null\"]],\n                                            [\"name\" => \"content\", \"type\" => [\"string\", \"null\"]],\n                                        ]]\n                                    ]],\n                                ]],\n                            ]]\n                        ]],\n                    ]],\n                ]\n            ];\n    }\n\n    public function getIdFields()\n    {\n        return [\"nyplSource\", \"id\"];\n    }\n\n    public function getSequenceId()\n    {\n        return \"\";\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,0,null,null]},{"name":"src\/Model\/DataModel\/BaseBib\/NewBib.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel\\BaseBib;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"sourceCode\"})\n *\/\nclass NewBib extends Bib\n{\n}","coverage":[null,null,null,null,null,null,null,null,null]},{"name":"src\/Model\/DataModel\/BibLevel.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\nuse NYPL\\Starter\\Model\\ModelTrait\\TranslateTrait;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"code\"})\n *\/\nclass BibLevel extends Model\n{\n    use TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"m\")\n     * @var string\n     *\/\n    public $code;\n\n    \/**\n     * @SWG\\Property(example=\"MONOGRAPH\")\n     * @var string\n     *\/\n    public $value;\n\n    \/**\n     * @return string\n     *\/\n    public function getCode()\n    {\n        return $this->code;\n    }\n\n    \/**\n     * @param string $code\n     *\/\n    public function setCode($code)\n    {\n        $this->code = $code;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getValue()\n    {\n        return $this->value;\n    }\n\n    \/**\n     * @param string $value\n     *\/\n    public function setValue($value)\n    {\n        $this->value = $value;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/Country.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\nuse NYPL\\Starter\\Model\\ModelTrait\\TranslateTrait;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"code\"})\n *\/\nclass Country extends Model\n{\n    use TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"nyu\")\n     * @var string\n     *\/\n    public $code;\n\n    \/**\n     * @SWG\\Property(example=\"New York (State)\")\n     * @var string\n     *\/\n    public $name;\n\n    \/**\n     * @return string\n     *\/\n    public function getCode()\n    {\n        return $this->code;\n    }\n\n    \/**\n     * @param string $code\n     *\/\n    public function setCode($code)\n    {\n        $this->code = $code;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getName()\n    {\n        return $this->name;\n    }\n\n    \/**\n     * @param string $name\n     *\/\n    public function setName($name)\n    {\n        $this->name = $name;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/FixedField.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"label\"})\n *\/\nclass FixedField extends Model\n{\n    use Model\\ModelTrait\\TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"Language\")\n     * @var string\n     *\/\n    public $label;\n\n    \/**\n     * @SWG\\Property(example=\"eng\")\n     * @var string\n     *\/\n    public $value;\n\n    \/**\n     * @SWG\\Property(example=\"English\")\n     * @var string\n     *\/\n    public $display;\n\n    \/**\n     * @return string\n     *\/\n    public function getLabel()\n    {\n        return $this->label;\n    }\n\n    \/**\n     * @param string $label\n     *\/\n    public function setLabel($label)\n    {\n        $this->label = $label;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getValue()\n    {\n        return $this->value;\n    }\n\n    \/**\n     * @param string $value\n     *\/\n    public function setValue($value)\n    {\n        $this->value = $value;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getDisplay()\n    {\n        return $this->display;\n    }\n\n    \/**\n     * @param string $display\n     *\/\n    public function setDisplay($display)\n    {\n        $this->display = $display;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/Language.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\nuse NYPL\\Starter\\Model\\ModelTrait\\TranslateTrait;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"code\"})\n *\/\nclass Language extends Model\n{\n    use TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"eng\")\n     * @var string\n     *\/\n    public $code;\n\n    \/**\n     * @SWG\\Property(example=\"English\")\n     * @var string\n     *\/\n    public $name;\n\n    \/**\n     * @return string\n     *\/\n    public function getCode()\n    {\n        return $this->code;\n    }\n\n    \/**\n     * @param string $code\n     *\/\n    public function setCode($code)\n    {\n        $this->code = $code;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getName()\n    {\n        return $this->name;\n    }\n\n    \/**\n     * @param string $name\n     *\/\n    public function setName($name)\n    {\n        $this->name = $name;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/Location.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\nuse NYPL\\Starter\\Model\\ModelTrait\\TranslateTrait;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"code\"})\n *\/\nclass Location extends Model\n{\n    use TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"rcma2\")\n     * @var string\n     *\/\n    public $code;\n\n    \/**\n     * @SWG\\Property(example=\"OFFSITE - Request in Advance\")\n     * @var string\n     *\/\n    public $name;\n\n    \/**\n     * @return string\n     *\/\n    public function getCode()\n    {\n        return $this->code;\n    }\n\n    \/**\n     * @param string $code\n     *\/\n    public function setCode($code)\n    {\n        $this->code = $code;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getName()\n    {\n        return $this->name;\n    }\n\n    \/**\n     * @param string $name\n     *\/\n    public function setName($name)\n    {\n        $this->name = $name;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/MaterialType.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\nuse NYPL\\Starter\\Model\\ModelTrait\\TranslateTrait;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"id\"})\n *\/\nclass MaterialType extends Model\n{\n    use TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"a\")\n     * @var string\n     *\/\n    public $code;\n\n    \/**\n     * @SWG\\Property(example=\"BOOK\/TEXT\")\n     * @var string\n     *\/\n    public $value;\n\n    \/**\n     * @return string\n     *\/\n    public function getCode()\n    {\n        return $this->code;\n    }\n\n    \/**\n     * @param string $code\n     *\/\n    public function setCode($code)\n    {\n        $this->code = $code;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getValue()\n    {\n        return $this->value;\n    }\n\n    \/**\n     * @param string $value\n     *\/\n    public function setValue($value)\n    {\n        $this->value = $value;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/SubField.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"tag\"})\n *\/\nclass SubField extends Model\n{\n    use Model\\ModelTrait\\TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"a\")\n     * @var string\n     *\/\n    public $tag;\n\n    \/**\n     * @SWG\\Property(example=\"Wizards\")\n     * @var string\n     *\/\n    public $content;\n\n    \/**\n     * @return string\n     *\/\n    public function getTag()\n    {\n        return $this->tag;\n    }\n\n    \/**\n     * @param string $tag\n     *\/\n    public function setTag($tag)\n    {\n        $this->tag = $tag;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getContent()\n    {\n        return $this->content;\n    }\n\n    \/**\n     * @param string $content\n     *\/\n    public function setContent($content)\n    {\n        $this->content = $content;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/DataModel\/VarField.php","source":"<?php\nnamespace NYPL\\Services\\Model\\DataModel;\n\nuse NYPL\\Starter\\Model;\nuse NYPL\\Starter\\Model\\ModelTrait\\TranslateTrait;\n\n\/**\n * @SWG\\Definition(type=\"object\", required={\"fieldTag\"})\n *\/\nclass VarField extends Model\n{\n    use TranslateTrait;\n\n    \/**\n     * @SWG\\Property(example=\"a\")\n     * @var string\n     *\/\n    public $fieldTag;\n\n    \/**\n     * @SWG\\Property(example=\"100\")\n     * @var string\n     *\/\n    public $marcTag;\n\n    \/**\n     * @SWG\\Property(example=\"1\")\n     * @var string\n     *\/\n    public $ind1;\n\n    \/**\n     * @SWG\\Property()\n     * @var string\n     *\/\n    public $ind2;\n\n    \/**\n     * @SWG\\Property()\n     * @var string\n     *\/\n    public $content;\n\n    \/**\n     * @SWG\\Property()\n     * @var SubField[]\n     *\/\n    public $subFields;\n\n    \/**\n     * @return string\n     *\/\n    public function getFieldTag()\n    {\n        return $this->fieldTag;\n    }\n\n    \/**\n     * @param string $fieldTag\n     *\/\n    public function setFieldTag($fieldTag)\n    {\n        $this->fieldTag = $fieldTag;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getMarcTag()\n    {\n        return $this->marcTag;\n    }\n\n    \/**\n     * @param string $marcTag\n     *\/\n    public function setMarcTag($marcTag)\n    {\n        $this->marcTag = $marcTag;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getInd1()\n    {\n        return $this->ind1;\n    }\n\n    \/**\n     * @param string $ind1\n     *\/\n    public function setInd1($ind1)\n    {\n        $this->ind1 = $ind1;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getInd2()\n    {\n        return $this->ind2;\n    }\n\n    \/**\n     * @param string $ind2\n     *\/\n    public function setInd2($ind2)\n    {\n        $this->ind2 = $ind2;\n    }\n\n    \/**\n     * @return SubField[]\n     *\/\n    public function getSubFields()\n    {\n        return $this->subFields;\n    }\n\n    \/**\n     * @param SubField[] $subFields\n     *\/\n    public function setSubFields($subFields)\n    {\n        $this->subFields = $subFields;\n    }\n\n    \/**\n     * @param array $data\n     *\n     * @return SubField\n     *\/\n    public function translateSubFields(array $data = [])\n    {\n        return $this->translateArray($data, new SubField());\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getContent()\n    {\n        return $this->content;\n    }\n\n    \/**\n     * @param string $content\n     *\/\n    public function setContent($content)\n    {\n        $this->content = $content;\n    }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,0,0,null]},{"name":"src\/Model\/Response\/BulkResponse\/BulkBibsResponse.php","source":"<?php\nnamespace NYPL\\Services\\Model\\Response\\BulkResponse;\n\nuse NYPL\\Services\\Model\\DataModel\\BaseBib\\Bib;\nuse NYPL\\Starter\\Model\\Response\\BulkResponse;\n\n\/**\n * @SWG\\Definition(title=\"BibsResponse\", type=\"object\")\n *\/\nclass BulkBibsResponse extends BulkResponse\n{\n    \/**\n     * @SWG\\Property\n     * @var Bib[]\n     *\/\n    public $data;\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},{"name":"src\/Model\/Response\/SuccessResponse\/BibResponse.php","source":"<?php\nnamespace NYPL\\Services\\Model\\Response\\SuccessResponse;\n\nuse NYPL\\Services\\Model\\DataModel\\BaseBib\\Bib;\nuse NYPL\\Starter\\Model\\Response\\SuccessResponse;\n\n\/**\n * @SWG\\Definition(title=\"BibResponse\", type=\"object\")\n *\/\nclass BibResponse extends SuccessResponse\n{\n    \/**\n     * @SWG\\Property\n     * @var Bib\n     *\/\n    public $data;\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},{"name":"src\/Model\/Response\/SuccessResponse\/BibsResponse.php","source":"<?php\nnamespace NYPL\\Services\\Model\\Response\\SuccessResponse;\n\nuse NYPL\\Services\\Model\\DataModel\\BaseBib\\Bib;\nuse NYPL\\Starter\\Model\\Response\\SuccessResponse;\n\n\/**\n * @SWG\\Definition(title=\"BibsResponse\", type=\"object\")\n *\/\nclass BibsResponse extends SuccessResponse\n{\n    \/**\n     * @SWG\\Property\n     * @var Bib[]\n     *\/\n    public $data;\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}],"environment":{"packagist_version":"1.0.1"}}